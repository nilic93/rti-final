service: multiregion-logic-one

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  apiName: multiregion-helloworld
  endpointType: REGIONAL

custom:
  prune:
    automatic: true
    includeLayers: true
    number: 2
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    packager: 'npm'
  domainName:
    dev: rti-final-project.com
    test: rti-final-project.com
    acc: rti-final-project.com
    prod: rti-final-project.com
  certificate:
    dev: arn:aws:acm:us-east-1:630698576776:certificate/0c1eba7e-e9b9-4d33-8723-d0ef05128bcc
    test: arn:aws:acm:us-east-1:630698576776:certificate/0c1eba7e-e9b9-4d33-8723-d0ef05128bcc
    acc: arn:aws:acm:us-east-1:630698576776:certificate/0c1eba7e-e9b9-4d33-8723-d0ef05128bcc
    prod: arn:aws:acm:us-east-1:630698576776:certificate/0c1eba7e-e9b9-4d33-8723-d0ef05128bcc
  zoneId:
    dev: 'Z0471933M7LHYMIFRI7D'
    test: 'Z0471933M7LHYMIFRI7D'
    acc: 'Z0471933M7LHYMIFRI7D'
    prod: 'Z0471933M7LHYMIFRI7D'
  customDomain:
    domainName: ${self:custom.domainName.${self:provider.stage}, self:custom.domainName.dev}
    basePath: 'multiregion'
    certificateArn: ${self:custom.certificate.${self:provider.stage}, self:custom.certificate.dev}
    createRoute53Record: true
    hostedZoneId: ${self:custom.zoneId.${self:provider.stage}, self:custom.zoneId.dev}
    stage: ${self:provider.stage}
    securityPolicy: tls_1_2

functions:

  multiregion-logic:
    handler: src/functions/multiregion-logic/handler-one.basic
    events:
      - http:
          method: get
          path: info
          cors: true
  health-check-logic:
    handler: src/functions/health-check-logic/handler-one.basic
    events:
      - http:
          method: get
          path: health
          cors: true

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-domain-manager



